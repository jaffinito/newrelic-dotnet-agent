name: .NET Agent All Solutions Build

# Does not run on PUSH since we have already ran all the test
on:
  workflow_dispatch:

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true

jobs:

# This builds both FullAgent and MSIInstaller since MSIInstaller requires FullAgent artifacts.
  build-test-fullagent-msi:
    name: Build and Test FullAgent and MSIInstaller
    runs-on: windows-2019

    env:
      fullagent_solution_path: ${{ github.workspace }}\FullAgent.sln
      msi_solution_path: ${{ github.workspace }}\src\Agent\MsiInstaller\MsiInstaller.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1

      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1
 
      - name: Install dependencies for FullAgent.sln
        run: |
          Write-Host ${{ env.tools_path }}\nuget.exe restore ${{ env.fullagent_solution_path }} -NoCache -Source `"https://www.nuget.org/api/v2`"
          ${{ env.tools_path }}\nuget.exe restore ${{ env.fullagent_solution_path }} -NoCache -Source "https://www.nuget.org/api/v2"
        shell: powershell

      - name: Install dependencies for MsiInstaller.sln
        run: |
          Write-Host ${{ env.tools_path }}\nuget.exe restore ${{ env.msi_solution_path }} -NoCache -Source `"https://www.nuget.org/api/v2`"
          ${{ env.tools_path }}\nuget.exe restore ${{ env.msi_solution_path }} -NoCache -Source "https://www.nuget.org/api/v2"
        shell: powershell
      
      - name: Build FullAgent.sln
        run: |
          Write-Host "MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}"
          MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}
        shell: powershell

      - name: Create agent_version.txt
        run: |
          $agentVersion = (Get-Item "${{ github.workspace }}\src\_build\AnyCPU-Release\NewRelic.Agent.Core\net45\NewRelic.Agent.Core.dll").VersionInfo.FileVersion
          Write-Host "Agent version $agentVersion"
          $agentVersion | Out-File -FilePath ${{ github.workspace }}\agent_version.txt -encoding utf8
        shell: powershell
        
      - name: Create agent_version.txt artifact
        uses: actions/upload-artifact@v2
        with:
          name: agent-version
          path: ${{ github.workspace }}\agent_version.txt
          if-no-files-found: error
      
      - name: Archive NewRelic.NuGetHelper
        uses: actions/upload-artifact@v2
        with:
          name: NewRelic.NuGetHelper
          path: ${{ github.workspace }}\build\NewRelic.NuGetHelper\bin
          if-no-files-found: error
          
      - name: Archive NewRelic.Agent.Extensions
        uses: actions/upload-artifact@v2
        with:
          name: NewRelic.Agent.Extensions
          path: ${{ github.workspace }}\src\Agent\NewRelic\Agent\Extensions\NewRelic.Agent.Extensions\bin\Release
          if-no-files-found: error

      - name: Archive FullAgent Home folders
        uses: actions/upload-artifact@v2
        with:
          name: homefolders
          path: |
            ${{ github.workspace }}\src\Agent\newrelichome_x64
            ${{ github.workspace }}\src\Agent\newrelichome_x64_coreclr
            ${{ github.workspace }}\src\Agent\newrelichome_x64_coreclr_linux
            ${{ github.workspace }}\src\Agent\newrelichome_x86
            ${{ github.workspace }}\src\Agent\newrelichome_x86_coreclr
          if-no-files-found: error

      - name: Get Cert
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'newrelic_code_sign_cert.pfx'
          encodedString: ${{ secrets.SIGNING_CERT }}
          
      - name: File check
        run: |
          ls
        shell: powershell

      - name: Build MsiInstaller.sln x86
        run: |
          Write-Host "MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true -p:Platform=x86 ${{ env.msi_solution_path }}"
          MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true -p:Platform=x86 ${{ env.msi_solution_path }}
        shell: powershell

      - name: Build MsiInstaller.sln x64
        run: |
          Write-Host "MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true -p:Platform=x64 ${{ env.msi_solution_path }}"
          MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true -p:Platform=x64 ${{ env.msi_solution_path }}
        shell: powershell

      - name: Archive _build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-folder-artifacts
          path: ${{ github.workspace }}\src\_build
          if-no-files-found: error

      - name: Archive NewRelic.OpenTracing.AmazonLambda.Tracer
        uses: actions/upload-artifact@v2
        with:
          name: NewRelic.OpenTracing.AmazonLambda.Tracer
          path: ${{ github.workspace }}\src\AwsLambda\AwsLambdaOpenTracer\bin\Release\netstandard2.0-ILRepacked
          if-no-files-found: error
