name: New Relic Logging Extensions for .NET

on:
  pull_request:
    branches: [ master ]
  push: 
    branches: [ master ]

jobs:

  build-test:

    runs-on: windows-2019

    env:
      artifact_staging_path: ${{ github.workspace }}\artifactstaging
      DOTNET_NOLOGO: true
      #<other env vars here>

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.1
    
    - name: Setup Artifacts Staging
      run: New-Item -Path "${{ github.workspace }}" -Name "artifactstaging" -ItemType Directory
      shell: powershell

    - name: Setup Artifact Staging
      run: New-Item -Path "${{ github.workspace }}" -Name "artifactstaging" -ItemType "directory"
      shell: powershell

    - name: Setup Nuget with API Key and Add to Path
      uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '5.x'

    - name: Build
      run:  dotnet build NewRelic.LogEnrichers.sln --configuration Release
      shell: powershell

    - name: Test Serilog
      run:  dotnet test src/Serilog/NewRelic.LogEnrichers.Serilog.Tests --no-build --no-restore --configuration Release --logger trx
      shell: powershell

    - name: Test NLog
      run:  dotnet test src/NLog/NewRelic.LogEnrichers.NLog.Tests --no-build --no-restore --configuration Release --logger trx
      shell: powershell
    
    - name: Test Log4Net
      run:  dotnet test src/Log4Net/NewRelic.LogEnrichers.Log4Net.Tests --no-build --no-restore --configuration Release --logger trx
      shell: powershell
     
    - name: Archive the artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-${{ github.run_id }}
        path: ${{ env.solution_path }}

    - name: Copy Serilog Build Artifacts to Staging Location
      run:  |
        Copy-Item -Path "${{ github.workspace }}\src\Serilog\NewRelic.LogEnrichers.Serilog\bin\Release" -Include "*.nupkg" -Destination "${{ artifact_staging_path }}\"
        Copy-Item -Path "${{ github.workspace }}\src\Serilog\NewRelic.LogEnrichers.Serilog\bin\Release\*" -Include "*.snupkg" -Destination "${{ artifact_staging_path }}\"
      shell: powershell

    - name: Copy NLog Build Artifacts to Staging Location
      run:  |
        Copy-Item -Path "${{ github.workspace }}\src\\NLog\NewRelic.LogEnrichers.NLog\bin\Release" -Include "*.nupkg" -Destination "${{ artifact_staging_path }}\"
        Copy-Item -Path "${{ github.workspace }}\src\\NLog\NewRelic.LogEnrichers.NLog\bin\Release\*" -Include "*.snupkg" -Destination "${{ artifact_staging_path }}\"
      shell: powershell

    - name: Copy Log4Net Build Artifacts to Staging Location
      run:  |
        Copy-Item -Path "${{ github.workspace }}\src\Copying D:\a\1\s\src\Log4Net\NewRelic.LogEnrichers.Log4Net\bin\Release" -Include "*.nupkg" -Destination "${{ artifact_staging_path }}\"
        Copy-Item -Path "${{ github.workspace }}\src\Copying D:\a\1\s\src\Log4Net\NewRelic.LogEnrichers.Log4Net\bin\Release\*" -Include "*.snupkg" -Destination "${{ artifact_staging_path }}\"
      shell: powershell

      # This step will only run on a push to master aka Merge from a PR.
    - name: Publish to MyGet
      if: ${{ github.event_name == 'push' }}
      run: |
        foreach ($file in Get-ChildItem -Path "${{ artifact_staging_path }}\") {
          nuget push $file.name -Source https://www.myget.org/F/newrelic/api/v3/index.json }
      shell: powershell
