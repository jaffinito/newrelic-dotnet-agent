# This is a basic workflow to help you get started with Actions

name: featuretesting

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch:

env:
  stuff: "nope"
   

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  vars-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: set output
        run: |
          echo "::set-output name=action_fruit::strawberry"
          echo "woo=cool" >> $GITHUB_ENV
          echo "======================================"
          echo "$GITHUB_ENV"
          echo "======================================"
          cat "$GITHUB_ENV"
          echo "======================================"
        shell: bash
        id: fruit
      
      - name: get output
        run: |
          echo "$GITHUB_ENV"
          echo "======================================"
          echo "${{ steps.fruit.outputs.action_fruit }}"
          echo "$woo"
        shell: bash

  vars-windows:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: set output
        run: |
          Write-Host "::set-output name=action_fruit::strawberry"
          "woo=cool" | Add-Content -Path "${env:GITHUB_ENV}"
          Write-Host "======================================"
          Write-Host "${env:GITHUB_ENV}"
          Write-Host "======================================"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Write-Host "======================================"
        shell: powershell
        id: fruit
      
      - name: get output
        run: |
          Write-Host "${env:GITHUB_ENV}"
          Write-Host "======================================"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Get-Content "${env:GITHUB_ENV}"
          Write-Host "======================================"
          Write-Host "${{ steps.fruit.outputs.action_fruit }}"
          Write-Host "${woo}"
        shell: powershell
